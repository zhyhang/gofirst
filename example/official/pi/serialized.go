package main

import (
	"fmt"
	"math"
)

// 使用格雷戈里 - 莱布尼茨无穷级数。数学家们发现了若干个数学级数，如果实施无穷多次运算，就能精确计算出 Pi 小数点后面的多位数字。
// 其中部分无穷级数非常复杂，需要超级计算机才能运算处理。
// 但是有一个最简单的无穷级数，即格雷戈里-莱布尼茨级数。
// 尽管计算较费时间，但每一次迭代的结果都会更接近 Pi 的精确值，迭代 500,000 次后可准确计算出 Pi 的 10 位小数。
// 公式如下：
// π = (4/1) - (4/3) + (4/5) - (4/7) + (4/9) - (4/11) + (4/13) - (4/15) ...
// serialized computation of π
func main() {
	iterates := 5000
	pi := float64(0)
	for i := 0; i <= iterates; i++ {
		pi += 4 * math.Pow(-1, float64(i)) / float64(2*i+1)
	}
	fmt.Printf("π is: %f \n", pi)
}
